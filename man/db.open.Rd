% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db-io.R
\name{db.open}
\alias{db.open}
\title{Open a new database connection}
\usage{
db.open(file = ":memory:", functions = list(), modules = list())
}
\arguments{
\item{file}{A character string specifying the database file.
If it is the special string ':memory:', a new temporary database
is created in computer memory. If it is an empty string, a new
on-disk database is created in the system's temporary location.
Otherwise it should specify a file path. If the path exists, the
database is opened. If it does not exist a new on-disk database is
created at that location and opened.}

\item{functions}{A named list of functions. Each element is a
user-defined SQL function to register with the database connection.}

\item{modules}{A list of virtual table module factories created
by \code{\link{new.virtualtable}}. Each element should be a function
that takes as a single parameter the database connection. When called
the function will register the virtual table implementation, with
the database connection.}
}
\value{
An S4 object of class "database". This object has two slots.
the \code{handle} slot is an external pointer to the underlying
sqlite3 database object. The \code{file} slot is a character string
with the database file.
}
\description{
Open a new database connection
}
\details{
When a database connection is opened the database is checked
for the presence of two system tables named dbpkg_vtable and
dbpkg_sqlfunc. These two tables can be used to register virtual table
implementations and user-defined SQL functions with the database
connection. dbpkg_vtable should have the following schema
\preformatted{
CREATE TABLE dbpkg_vtable (
   mod TEXT NOT NULL,
   pkg TEXT NOT NULL
)
}
where 'mod' is the name of a virtual table module and 'pkg' is the name
of an R package that implements the module methods. This package must
export a function named db.register_<mod>, where <mod> is replaced by
the value of 'mod' stored in the database table. This should be a function
returned by a call to \code{\link{new.virtualtable}}. Rdb will then call
that function, passing it the newly created database connection, which will
register that module with the database.

dbpkg_sqlfunc should have the following schema
\preformatted{
CREATE TABLE dbpkg_sqlfunc (
   name TEXT NOT NULL,
   func TEXT NOT NULL,
   pkg TEXT NOT NULL
)
}
where 'name' is the name of user-defined SQL function, 'func' is the name
of the R function that implements it, and 'pkg' is the name of the package
that exports the R function. Rdb will then call \code{\link{db.function}}
to register the function with the newly created database connection under
the given 'name'.
}
